Shader	boxy/shaders.html#Shader	shaders: Shader	
getErrorLog	boxy/shaders.html#getErrorLog,GLuint,string,,	shaders: getErrorLog(id: GLuint; path: string; lenProc: typeof(glGetShaderiv);\n            strProc: typeof(glGetShaderInfoLog)): string	
compileComputeShader	boxy/shaders.html#compileComputeShader	shaders: compileComputeShader(compute: (string, string)): GLuint	
compileComputeShader	boxy/shaders.html#compileComputeShader,string	shaders: compileComputeShader(path: string): GLuint	
compileShaderFiles	boxy/shaders.html#compileShaderFiles,,	shaders: compileShaderFiles(vert, frag: (string, string)): GLuint	
compileShaderFiles	boxy/shaders.html#compileShaderFiles,string,string	shaders: compileShaderFiles(vertPath, fragPath: string): GLuint	
newShader	boxy/shaders.html#newShader	shaders: newShader(compute: (string, string)): Shader	
newShader	boxy/shaders.html#newShader,string	shaders: newShader(computePath: string): Shader	
newShaderStatic	boxy/shaders.html#newShaderStatic.t,string	shaders: newShaderStatic(computePath: string): Shader	
newShader	boxy/shaders.html#newShader,,	shaders: newShader(vert, frag: (string, string)): Shader	
newShader	boxy/shaders.html#newShader,string,string	shaders: newShader(vertPath, fragPath: string): Shader	
newShaderStatic	boxy/shaders.html#newShaderStatic.t,string,string	shaders: newShaderStatic(vertPath, fragPath: string): Shader	
hasUniform	boxy/shaders.html#hasUniform,Shader,string	shaders: hasUniform(shader: Shader; name: string): bool	
setUniform	boxy/shaders.html#setUniform,Shader,string,varargs[int32]	shaders: setUniform(shader: Shader; name: string; args: varargs[int32])	
setUniform	boxy/shaders.html#setUniform,Shader,string,varargs[float32]	shaders: setUniform(shader: Shader; name: string; args: varargs[float32])	
setUniform	boxy/shaders.html#setUniform,Shader,string,Vec2	shaders: setUniform(shader: Shader; name: string; v: Vec2)	
setUniform	boxy/shaders.html#setUniform,Shader,string,Vec3	shaders: setUniform(shader: Shader; name: string; v: Vec3)	
setUniform	boxy/shaders.html#setUniform,Shader,string,Vec4	shaders: setUniform(shader: Shader; name: string; v: Vec4)	
setUniform	boxy/shaders.html#setUniform,Shader,string,Mat4	shaders: setUniform(shader: Shader; name: string; m: Mat4)	
setUniform	boxy/shaders.html#setUniform,Shader,string,bool	shaders: setUniform(shader: Shader; name: string; b: bool)	
bindUniforms	boxy/shaders.html#bindUniforms,Shader	shaders: bindUniforms(shader: Shader)	
bindUniformBuffer	boxy/shaders.html#bindUniformBuffer,Shader,string,Buffer,GLuint	shaders: bindUniformBuffer(shader: Shader; name: string; buffer: Buffer; binding: GLuint)	
bindAttrib	boxy/shaders.html#bindAttrib,Shader,string,Buffer	shaders: bindAttrib(shader: Shader; name: string; buffer: Buffer)	
